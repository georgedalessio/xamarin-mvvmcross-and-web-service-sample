// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;
using XamFormsMvvmAndRESTServices.Models;

namespace XamFormsMvvmAndRESTServices.Models
{
    public partial class Student
    {
        private DateTimeOffset? _enrollmentDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? EnrollmentDate
        {
            get { return this._enrollmentDate; }
            set { this._enrollmentDate = value; }
        }
        
        private IList<Enrollment> _enrollments;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Enrollment> Enrollments
        {
            get { return this._enrollments; }
            set { this._enrollments = value; }
        }
        
        private string _firstMidName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string FirstMidName
        {
            get { return this._firstMidName; }
            set { this._firstMidName = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? ID
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _lastName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string LastName
        {
            get { return this._lastName; }
            set { this._lastName = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Student class.
        /// </summary>
        public Student()
        {
            this.Enrollments = new LazyList<Enrollment>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken enrollmentDateValue = inputObject["EnrollmentDate"];
                if (enrollmentDateValue != null && enrollmentDateValue.Type != JTokenType.Null)
                {
                    this.EnrollmentDate = ((DateTimeOffset)enrollmentDateValue);
                }
                JToken enrollmentsSequence = ((JToken)inputObject["Enrollments"]);
                if (enrollmentsSequence != null && enrollmentsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken enrollmentsValue in ((JArray)enrollmentsSequence))
                    {
                        Enrollment enrollment = new Enrollment();
                        enrollment.DeserializeJson(enrollmentsValue);
                        this.Enrollments.Add(enrollment);
                    }
                }
                JToken firstMidNameValue = inputObject["FirstMidName"];
                if (firstMidNameValue != null && firstMidNameValue.Type != JTokenType.Null)
                {
                    this.FirstMidName = ((string)firstMidNameValue);
                }
                JToken idValue = inputObject["ID"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.ID = ((int)idValue);
                }
                JToken lastNameValue = inputObject["LastName"];
                if (lastNameValue != null && lastNameValue.Type != JTokenType.Null)
                {
                    this.LastName = ((string)lastNameValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Student
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.EnrollmentDate != null)
            {
                outputObject["EnrollmentDate"] = this.EnrollmentDate.Value;
            }
            JArray enrollmentsSequence = null;
            if (this.Enrollments != null)
            {
                if (this.Enrollments is ILazyCollection<Enrollment> == false || ((ILazyCollection<Enrollment>)this.Enrollments).IsInitialized)
                {
                    enrollmentsSequence = new JArray();
                    outputObject["Enrollments"] = enrollmentsSequence;
                    foreach (Enrollment enrollmentsItem in this.Enrollments)
                    {
                        if (enrollmentsItem != null)
                        {
                            enrollmentsSequence.Add(enrollmentsItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.FirstMidName != null)
            {
                outputObject["FirstMidName"] = this.FirstMidName;
            }
            if (this.ID != null)
            {
                outputObject["ID"] = this.ID.Value;
            }
            if (this.LastName != null)
            {
                outputObject["LastName"] = this.LastName;
            }
            return outputObject;
        }
    }
}
